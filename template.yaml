# https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  VoiceItAPIToken:
    Type: String
  VoiceItAPIKey:
    Type: String
  TwilioAccountSid:
    Type: String
  TwilioAuthToken:
    Type: String
  JWTKey:
    Type: String
  APIHost:
    Type: String
  # Variables below should be blank in real deployments, but are used locally in dev
  DynamoHost:
    Type: String
    Default: ''
  AppEnv:
    Type: String
    Default: 'production'

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 180
    Tracing: Active
    Environment:
      Variables:
        TABLE_ACCOUNTS: !Ref AccountsTable
        TABLE_SURVEY: !Ref SurveyTable
        TABLE_APPROVED: !Ref ApprovedUsersTable
        DYNAMO_HOST: !Ref DynamoHost
        APPENV: !Ref AppEnv
        VOICEIT_API_KEY: !Ref VoiceItAPIKey
        VOICEIT_API_TOKEN: !Ref VoiceItAPIToken
        TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
        TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
        JWT_KEY: !Ref JWTKey
        # TODO: Automatically inject this URL 'https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/dev/en-GB'
        # The problem is getting a single template to work both in dev and live
        API_HOST: !Ref APIHost

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev

  RootWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/root
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  MenuWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/menu
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/menu
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  MenuFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/menu
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/menu
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  MobileMoneyMenuWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/mobilemoney
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  MobileMoneyMenuFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  AccountInformationFuction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/mobilemoney/account-info
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/account-info
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  PayABillWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/mobilemoney/pay-bill
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/pay-bill
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  PayABillAccountFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/pay-bill/account-number
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/pay-bill/account-number
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  PayABill50ConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/pay-bill/account-number/50-confirmation
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/pay-bill/account-number/50-confirmation
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  PayABill150ConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/pay-bill/account-number/150-confirmation
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/pay-bill/account-number/150-confirmation
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  DeactivationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/deactivation
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/deactivation
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  ReactivationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/reactivation
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/reactivation
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  ReturnWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/return
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/return
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  ReturnFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/return
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/return
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  SurveyWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/survey
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/survey
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  SurveyQuestion:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/survey/question
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/survey/question/{questionNumber}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  SurveyFinal:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/survey/question/final
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/survey/question/{questionNumber}/final
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  TransferWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/mobilemoney/transfer
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/transfer
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  TransferAccountNumberFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/transfer/account-number
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/transfer/account-number
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  TransferAmountFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/transfer/account-number/amount
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/transfer/account-number/amount
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  TransferConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/mobilemoney/transfer/account-number/amount/confirmation
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/mobilemoney/transfer/account-number/amount/confirmation
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  CallbackWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/callback
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/callback
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  CallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/callback
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/callback
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  PassphraseWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/passphrase
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/passphrase
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  PassphraseFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/passphrase
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/passphrase
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  AddPassphraseWelcome:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      CodeUri: ./dist/handlers/passphrase/add
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/passphrase/add
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi

  AddPassphraseFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      CodeUri: ./dist/handlers/passphrase/add
      Role: !GetAtt LambdaRole.Arn
      Events:
        HTTP:
          Type: Api
          Properties:
            Path: /{lang}/passphrase/add
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi

  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  SurveyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ApprovedUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: project
          Value: bilt
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaAccessDynamo
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !GetAtt AccountsTable.Arn
                  - !GetAtt SurveyTable.Arn
                  - !GetAtt ApprovedUsersTable.Arn
      PermissionsBoundary: arn:aws:iam::736485099071:policy/LambdaRoleBoundaries

Outputs:
  APIEndpoint:
    Description: 'API Endpoint'
    Value: !Sub 'https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/dev/fr-FR'
